<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>spring - 分类 - 山脚下的脚下山</title>
        <link>https://scemsjyd.com/categories/spring/</link>
        <description>spring - 分类 - 山脚下的脚下山</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>scemsjyd@gmail.com (Adam.Jin)</managingEditor>
            <webMaster>scemsjyd@gmail.com (Adam.Jin)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 27 Oct 2019 15:58:21 &#43;0800</lastBuildDate><atom:link href="https://scemsjyd.com/categories/spring/" rel="self" type="application/rss+xml" /><item>
    <title>01_springmvc_flow</title>
    <link>https://scemsjyd.com/01_springmvc_flow/</link>
    <pubDate>Thu, 27 Oct 2016 15:58:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://scemsjyd.com/01_springmvc_flow/</guid>
    <description><![CDATA[SpringMVC SpringMVC流程图 SpringMVC 九大组件 翻看SpringMVC源码会发现 DispatcherServlet 用于处理上传请求。处理方法是将普通的request包装成Multipa]]></description>
</item><item>
    <title>02_springmvc_init</title>
    <link>https://scemsjyd.com/02_springmvc_init/</link>
    <pubDate>Fri, 28 Oct 2016 15:58:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://scemsjyd.com/02_springmvc_init/</guid>
    <description><![CDATA[DispatcherServlet Init dispatcherServlet是springmvc的核心 servlet的生命周期 ==servlet==的三个重要方法init service destroy 1.]]></description>
</item><item>
    <title>03_springmvc_handlermapping</title>
    <link>https://scemsjyd.com/03_springmvc_handlermapping/</link>
    <pubDate>Sat, 29 Oct 2016 15:58:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://scemsjyd.com/03_springmvc_handlermapping/</guid>
    <description><![CDATA[HandlerMapping HandlerMapping接口负责根据request请求找到对应的Handler处理器及Interceptor拦截器，并将它们封装在Ha]]></description>
</item><item>
    <title>04_springmvc_handleradapter</title>
    <link>https://scemsjyd.com/04_springmvc_handleradapter/</link>
    <pubDate>Sun, 30 Oct 2016 15:59:23 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://scemsjyd.com/04_springmvc_handleradapter/</guid>
    <description><![CDATA[HandlerAdapter HandlerAdapter是处理器适配器，Spring MVC通过HandlerAdapter来实际调用处理函数。它是SpringMvc处]]></description>
</item><item>
    <title>05_springmvc_handlerExceptionResolver</title>
    <link>https://scemsjyd.com/05_springmvc_handlerexceptionresolver/</link>
    <pubDate>Tue, 01 Nov 2016 10:59:42 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://scemsjyd.com/05_springmvc_handlerexceptionresolver/</guid>
    <description><![CDATA[HandlerExceptionResolver Spring的处理器异常解析器HandlerExceptionResolver接口的实现负责处理各类控制器执行过程中出现的异常 1 2 3 4 5 public]]></description>
</item><item>
    <title>06_springmvc_validator</title>
    <link>https://scemsjyd.com/06_springmvc_validator/</link>
    <pubDate>Tue, 01 Nov 2016 15:59:42 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://scemsjyd.com/06_springmvc_validator/</guid>
    <description><![CDATA[参数校验器 Spring MVC中的参数校验器并没有自己大量从新开发，而是使用了Hibernate-Validator，而Hibernate-Valida]]></description>
</item><item>
    <title>SpringData_kafka</title>
    <link>https://scemsjyd.com/springdata_kafka/</link>
    <pubDate>Sun, 27 Oct 2019 15:58:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://scemsjyd.com/springdata_kafka/</guid>
    <description><![CDATA[<h1 id="spring-kafka-要点">Spring kafka 要点</h1>
<blockquote>
<p>以下内容记录了一些工作中遇到的kafka的要点（个人认为）</p>
</blockquote>
<h2 id="一kafka消费者">一、kafka消费者</h2>
<h3 id="11源码分析">1.1、源码分析</h3>
<h4 id="111-enablekafka">1.1.1、 <code>@EnableKafka</code></h4>
<p>作用：kafka开启入口</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="nd">@Target</span><span class="o">(</span><span class="n">ElementType</span><span class="o">.</span><span class="na">TYPE</span><span class="o">)</span>
<span class="nd">@Retention</span><span class="o">(</span><span class="n">RetentionPolicy</span><span class="o">.</span><span class="na">RUNTIME</span><span class="o">)</span>
<span class="nd">@Documented</span>
<span class="nd">@Import</span><span class="o">(</span><span class="n">KafkaBootstrapConfiguration</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="c1">// 最重要的入口配置
</span><span class="c1"></span><span class="kd">public</span> <span class="nd">@interface</span> <span class="n">EnableKafka</span> <span class="o">{</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
